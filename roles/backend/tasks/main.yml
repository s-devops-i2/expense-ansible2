- name: Disable nodejs
  ansible.builtin.shell: dnf module disable nodejs -y

- name: Enable nodejs:20
  ansible.builtin.shell: dnf module enable nodejs:20 -y

- name: Install nodejs
  ansible.builtin.dnf:
      name: nodejs
      state: installed

- name: Add application User
  ansible.builtin.user:
    name: "{{app_user}}"

- name: Copy Backend Service file
  ansible.builtin.template:
    src: expense.conf
    dest: /etc/systemd/system/backend.service

- name: Import common role
  ansible.builtin.import_role:
    name: common
    tasks_from: app_pre_req

- name: npm install
  community.general.npm:
    path: /app
    state: latest
#  become_user: expense

- name: Copy backend service file
  ansible.builtin.template:
    src: backend.service
    dest: /etc/systemd/system/backend.service


- name: Install python mysql client
  ansible.builtin.pip:
    name:
      - cryptography
      - PyMySQL
    executable: pip3.11


- name: install MySQL Clinet
  ansible.builtin.dnf:
    name: mysql
    state: installed

- name: Load Schema
  community.mysql.mysql_db:
    name: all
    state: import
    target: /app/schema/backend.sql
    login_user: root
    login_password: "{{mysql_root_password}}"
    login_host: mysql-{{env}}.shujathdevops.online

- name: Import Newrelic role
  ansible.builtin.import_role:
    name: newrelic
    tasks_from: nodejs

- name: Start Backend
  ansible.builtin.systemd_service:
    state: restarted
    name: backend
    enabled: true
    daemon_reload: true


