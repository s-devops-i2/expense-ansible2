- name: Frontend Playbook
  hosts: all
  become: true
  tasks:
    - name: Install Nginx
      ansible.builtin.dnf:
        name: nginx
        state: latest

    - name: Remove Old content
      ansible.builtin.file:
        path: /usr/share/nginx/html/
        state: absent

    - name: Create Directory
      ansible.builtin.file:
        path: /usr/share/nginx/html/
        state: directory

    - name: Unarchive a file that is already on the remote machine
      ansible.builtin.unarchive:
        src: https://expense-artifacts.s3.amazonaws.com/expense-frontend-v2.zip
        dest: /usr/share/nginx/html
        remote_src: yes

#    - name: Start Nginx
#      ansible.builtin.systemd_service:
#        state: started
#        name: nginx
#        enabled: true
#        daemon_reload: true

#
#    Download the frontend content
#
#    curl -o /tmp/frontend.zip https://expense-artifacts.s3.amazonaws.com/expense-frontend-v2.zip
##    Extract the frontend content.
##    cd /usr/share/nginx/html
#    unzip /tmp/frontend.zip
#
#    info
#    Try to access the nginx service once more over the browser and ensure you get expense content.
#
#    Create Nginx Reverse Proxy Configuration.
#
#    vim /etc/nginx/default.d/expense.conf
#
#    Add the following content
#
#    /etc/nginx/default.d/expense.conf
#    proxy_http_version 1.1;
#
#    location /api/ { proxy_pass http://localhost:8080/; }
#
#    location /health {
#    stub_status on;
#    access_log off;
#  }
#
#    Note
#    Ensure you replace the localhost with the actual ip address of backend component server. Word localhost is just used to avoid the failures on the Nginx Server.
#
#    Restart Nginx Service to load the changes of the configuration.
#
#    systemctl restart nginx